|top
select <= controller_reader:inst.select
CLOCK_50 => controller_reader:inst.clk
CLOCK_50 => controller:inst1.clk
reset => controller_reader:inst.reset
reset => controller:inst1.reset
PIN_UP_Z => controller_reader:inst.PIN_UP_Z
PIN_DOWN_Y => controller_reader:inst.PIN_DOWN_Y
PIN_LEFT_X => controller_reader:inst.PIN_LEFT_X
PIN_RIGHT_MODE => controller_reader:inst.PIN_RIGHT_MODE
PIN_A_B => controller_reader:inst.PIN_A_B
PIN_START_C => controller_reader:inst.PIN_START_C
block => controller_reader:inst.block
block => controller:inst1.block_controller
controller_output[0] <= controller:inst1.controller_output[0]
controller_output[1] <= controller:inst1.controller_output[1]
controller_output[2] <= controller:inst1.controller_output[2]
controller_output[3] <= controller:inst1.controller_output[3]
controller_output[4] <= controller:inst1.controller_output[4]
controller_output[5] <= controller:inst1.controller_output[5]
controller_output[6] <= controller:inst1.controller_output[6]
controller_output[7] <= controller:inst1.controller_output[7]
controller_output[8] <= controller:inst1.controller_output[8]
controller_output[9] <= controller:inst1.controller_output[9]
controller_output[10] <= controller:inst1.controller_output[10]
controller_output[11] <= controller:inst1.controller_output[11]
LEDR[0] <= controller:inst1.LEDR[0]
LEDR[1] <= controller:inst1.LEDR[1]
LEDR[2] <= controller:inst1.LEDR[2]
LEDR[3] <= controller:inst1.LEDR[3]
LEDR[4] <= controller:inst1.LEDR[4]
LEDR[5] <= controller:inst1.LEDR[5]
LEDR[6] <= controller:inst1.LEDR[6]
LEDR[7] <= controller:inst1.LEDR[7]
LEDR[8] <= controller:inst1.LEDR[8]
LEDR[9] <= controller:inst1.LEDR[9]
LEDR[10] <= controller:inst1.LEDR[10]
LEDR[11] <= controller:inst1.LEDR[11]


|top|controller_reader:inst
clk => mode.CLK
clk => output_z.CLK
clk => y.CLK
clk => output_x.CLK
clk => c.CLK
clk => b.CLK
clk => right.CLK
clk => left.CLK
clk => down.CLK
clk => up.CLK
clk => start.CLK
clk => a.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => select~reg0.CLK
clk => state~10.DATAIN
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => select~reg0.PRESET
reset => state~12.DATAIN
reset => mode.ENA
reset => a.ENA
reset => start.ENA
reset => up.ENA
reset => down.ENA
reset => left.ENA
reset => right.ENA
reset => b.ENA
reset => c.ENA
reset => output_x.ENA
reset => y.ENA
reset => output_z.ENA
PIN_UP_Z => up.DATAB
PIN_UP_Z => output_z.DATAB
PIN_DOWN_Y => down.DATAB
PIN_DOWN_Y => y.DATAB
PIN_LEFT_X => left.DATAB
PIN_LEFT_X => output_x.DATAB
PIN_RIGHT_MODE => right.DATAB
PIN_RIGHT_MODE => mode.DATAB
PIN_A_B => a.DATAB
PIN_A_B => b.DATAB
PIN_START_C => c.DATAB
PIN_START_C => start.DATAB
block => state.OUTPUTSELECT
block => state.OUTPUTSELECT
block => state.OUTPUTSELECT
block => state.OUTPUTSELECT
block => state.OUTPUTSELECT
block => state.OUTPUTSELECT
block => state.OUTPUTSELECT
block => state.OUTPUTSELECT
block => state.OUTPUTSELECT
select <= select~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[0] <= mode.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= start.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= output_z.DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= output_x.DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= c.DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= b.DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= a.DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] <= right.DB_MAX_OUTPUT_PORT_TYPE
LEDR[9] <= left.DB_MAX_OUTPUT_PORT_TYPE
LEDR[10] <= down.DB_MAX_OUTPUT_PORT_TYPE
LEDR[11] <= up.DB_MAX_OUTPUT_PORT_TYPE


|top|controller:inst1
clk => clk.IN12
reset => reset.IN12
block_controller => block_controller.IN12
controller_input[0] => controller_input[0].IN1
controller_input[1] => controller_input[1].IN1
controller_input[2] => controller_input[2].IN1
controller_input[3] => controller_input[3].IN1
controller_input[4] => controller_input[4].IN1
controller_input[5] => controller_input[5].IN1
controller_input[6] => controller_input[6].IN1
controller_input[7] => controller_input[7].IN1
controller_input[8] => controller_input[8].IN1
controller_input[9] => controller_input[9].IN1
controller_input[10] => controller_input[10].IN1
controller_input[11] => controller_input[11].IN1
LEDR[0] <= <GND>
LEDR[1] <= <GND>
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>
LEDR[10] <= <GND>
LEDR[11] <= <GND>
controller_output[0] <= button_debouncer:debounce_blocks[0].db.btn_out
controller_output[1] <= button_debouncer:debounce_blocks[1].db.btn_out
controller_output[2] <= button_debouncer:debounce_blocks[2].db.btn_out
controller_output[3] <= button_debouncer:debounce_blocks[3].db.btn_out
controller_output[4] <= button_debouncer:debounce_blocks[4].db.btn_out
controller_output[5] <= button_debouncer:debounce_blocks[5].db.btn_out
controller_output[6] <= button_debouncer:debounce_blocks[6].db.btn_out
controller_output[7] <= button_debouncer:debounce_blocks[7].db.btn_out
controller_output[8] <= button_debouncer:debounce_blocks[8].db.btn_out
controller_output[9] <= button_debouncer:debounce_blocks[9].db.btn_out
controller_output[10] <= button_debouncer:debounce_blocks[10].db.btn_out
controller_output[11] <= button_debouncer:debounce_blocks[11].db.btn_out


|top|controller:inst1|button_debouncer:debounce_blocks[0].db
clk => btn_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => state~5.DATAIN
reset => btn_out~reg0.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => state~7.DATAIN
block => always0.IN0
block => always0.IN0
btn_in => always0.IN1
btn_in => always0.IN1
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|controller:inst1|button_debouncer:debounce_blocks[1].db
clk => btn_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => state~5.DATAIN
reset => btn_out~reg0.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => state~7.DATAIN
block => always0.IN0
block => always0.IN0
btn_in => always0.IN1
btn_in => always0.IN1
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|controller:inst1|button_debouncer:debounce_blocks[2].db
clk => btn_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => state~5.DATAIN
reset => btn_out~reg0.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => state~7.DATAIN
block => always0.IN0
block => always0.IN0
btn_in => always0.IN1
btn_in => always0.IN1
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|controller:inst1|button_debouncer:debounce_blocks[3].db
clk => btn_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => state~5.DATAIN
reset => btn_out~reg0.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => state~7.DATAIN
block => always0.IN0
block => always0.IN0
btn_in => always0.IN1
btn_in => always0.IN1
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|controller:inst1|button_debouncer:debounce_blocks[4].db
clk => btn_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => state~5.DATAIN
reset => btn_out~reg0.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => state~7.DATAIN
block => always0.IN0
block => always0.IN0
btn_in => always0.IN1
btn_in => always0.IN1
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|controller:inst1|button_debouncer:debounce_blocks[5].db
clk => btn_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => state~5.DATAIN
reset => btn_out~reg0.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => state~7.DATAIN
block => always0.IN0
block => always0.IN0
btn_in => always0.IN1
btn_in => always0.IN1
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|controller:inst1|button_debouncer:debounce_blocks[6].db
clk => btn_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => state~5.DATAIN
reset => btn_out~reg0.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => state~7.DATAIN
block => always0.IN0
block => always0.IN0
btn_in => always0.IN1
btn_in => always0.IN1
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|controller:inst1|button_debouncer:debounce_blocks[7].db
clk => btn_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => state~5.DATAIN
reset => btn_out~reg0.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => state~7.DATAIN
block => always0.IN0
block => always0.IN0
btn_in => always0.IN1
btn_in => always0.IN1
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|controller:inst1|button_debouncer:debounce_blocks[8].db
clk => btn_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => state~5.DATAIN
reset => btn_out~reg0.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => state~7.DATAIN
block => always0.IN0
block => always0.IN0
btn_in => always0.IN1
btn_in => always0.IN1
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|controller:inst1|button_debouncer:debounce_blocks[9].db
clk => btn_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => state~5.DATAIN
reset => btn_out~reg0.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => state~7.DATAIN
block => always0.IN0
block => always0.IN0
btn_in => always0.IN1
btn_in => always0.IN1
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|controller:inst1|button_debouncer:debounce_blocks[10].db
clk => btn_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => state~5.DATAIN
reset => btn_out~reg0.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => state~7.DATAIN
block => always0.IN0
block => always0.IN0
btn_in => always0.IN1
btn_in => always0.IN1
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|controller:inst1|button_debouncer:debounce_blocks[11].db
clk => btn_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => state~5.DATAIN
reset => btn_out~reg0.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => state~7.DATAIN
block => always0.IN0
block => always0.IN0
btn_in => always0.IN1
btn_in => always0.IN1
btn_out <= btn_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


