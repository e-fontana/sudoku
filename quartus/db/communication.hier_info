|top
CLOCK_50 => CLOCK_50.IN1
reset => reset.IN1
GPIO[0] <> controller_top:controller.GPIO
GPIO[1] <> controller_top:controller.GPIO
GPIO[2] <> controller_top:controller.GPIO
GPIO[3] <> controller_top:controller.GPIO
GPIO[4] <> controller_top:controller.GPIO
GPIO[5] <> controller_top:controller.GPIO
GPIO[6] <> controller_top:controller.GPIO
GPIO[7] <> controller_top:controller.GPIO
GPIO[8] <> controller_top:controller.GPIO
GPIO[9] <> controller_top:controller.GPIO
GPIO[10] <> controller_top:controller.GPIO
GPIO[11] <> controller_top:controller.GPIO
GPIO[12] <> controller_top:controller.GPIO
GPIO[13] <> controller_top:controller.GPIO
GPIO[14] <> controller_top:controller.GPIO
GPIO[15] <> controller_top:controller.GPIO
GPIO[16] <> controller_top:controller.GPIO
GPIO[17] <> controller_top:controller.GPIO
GPIO[18] <> controller_top:controller.GPIO
GPIO[19] <> controller_top:controller.GPIO
GPIO[20] <> controller_top:controller.GPIO
GPIO[21] <> controller_top:controller.GPIO
GPIO[22] <> controller_top:controller.GPIO
GPIO[23] <> controller_top:controller.GPIO
GPIO[24] <> controller_top:controller.GPIO
GPIO[25] <> controller_top:controller.GPIO
GPIO[26] <> controller_top:controller.GPIO
GPIO[27] <> controller_top:controller.GPIO
GPIO[28] <> controller_top:controller.GPIO
GPIO[29] <> controller_top:controller.GPIO
GPIO[30] <> controller_top:controller.GPIO
GPIO[31] <> controller_top:controller.GPIO
GPIO[32] <> controller_top:controller.GPIO
GPIO[33] <> controller_top:controller.GPIO
GPIO[34] <> controller_top:controller.GPIO
GPIO[35] <> controller_top:controller.GPIO
LEDR[0] << controller_top:controller.LEDR
LEDR[1] << controller_top:controller.LEDR
LEDR[2] << controller_top:controller.LEDR
LEDR[3] << controller_top:controller.LEDR
LEDR[4] << controller_top:controller.LEDR
LEDR[5] << controller_top:controller.LEDR
LEDR[6] << controller_top:controller.LEDR
LEDR[7] << controller_top:controller.LEDR
LEDR[8] << controller_top:controller.LEDR
LEDR[9] << controller_top:controller.LEDR
LEDR[10] << controller_top:controller.LEDR
LEDR[11] << controller_top:controller.LEDR
tx << uart_tx8:uart.tx
busy << uart_tx8:uart.busy


|top|controller_top:controller
CLOCK_50 => controller_reader:controller.clk
CLOCK_50 => counter[0].CLK
CLOCK_50 => counter[1].CLK
CLOCK_50 => counter[2].CLK
CLOCK_50 => counter[3].CLK
CLOCK_50 => counter[4].CLK
CLOCK_50 => counter[5].CLK
CLOCK_50 => counter[6].CLK
CLOCK_50 => counter[7].CLK
CLOCK_50 => counter[8].CLK
CLOCK_50 => counter[9].CLK
CLOCK_50 => counter[10].CLK
CLOCK_50 => counter[11].CLK
CLOCK_50 => counter[12].CLK
CLOCK_50 => counter[13].CLK
CLOCK_50 => counter[14].CLK
CLOCK_50 => counter[15].CLK
CLOCK_50 => counter[16].CLK
CLOCK_50 => counter[17].CLK
CLOCK_50 => counter[18].CLK
CLOCK_50 => counter[19].CLK
CLOCK_50 => counter[20].CLK
CLOCK_50 => counter[21].CLK
CLOCK_50 => counter[22].CLK
CLOCK_50 => counter[23].CLK
CLOCK_50 => counter[24].CLK
CLOCK_50 => counter[25].CLK
CLOCK_50 => counter[26].CLK
CLOCK_50 => counter[27].CLK
CLOCK_50 => counter[28].CLK
CLOCK_50 => counter[29].CLK
CLOCK_50 => counter[30].CLK
CLOCK_50 => counter[31].CLK
CLOCK_50 => flag.CLK
reset => controller_reader:controller.reset
LEDR[0] <= controller_reader:controller.LEDR[0]
LEDR[1] <= controller_reader:controller.LEDR[1]
LEDR[2] <= controller_reader:controller.LEDR[2]
LEDR[3] <= controller_reader:controller.LEDR[3]
LEDR[4] <= controller_reader:controller.LEDR[4]
LEDR[5] <= controller_reader:controller.LEDR[5]
LEDR[6] <= controller_reader:controller.LEDR[6]
LEDR[7] <= controller_reader:controller.LEDR[7]
LEDR[8] <= controller_reader:controller.LEDR[8]
LEDR[9] <= controller_reader:controller.LEDR[9]
LEDR[10] <= controller_reader:controller.LEDR[10]
LEDR[11] <= controller_reader:controller.LEDR[11]
GPIO[0] <> <UNC>
GPIO[1] <> <UNC>
GPIO[2] <> <UNC>
GPIO[3] <> <UNC>
GPIO[4] <> <UNC>
GPIO[5] <> <UNC>
GPIO[6] <> <UNC>
GPIO[7] <> <UNC>
GPIO[8] <> <UNC>
GPIO[9] <> <UNC>
GPIO[10] <> <UNC>
GPIO[11] <> <UNC>
GPIO[12] <> <UNC>
GPIO[13] <> <UNC>
GPIO[14] <> <UNC>
GPIO[15] <> <UNC>
GPIO[16] <> <UNC>
GPIO[17] <> <UNC>
GPIO[18] <> <UNC>
GPIO[19] <> <UNC>
GPIO[20] <> <UNC>
GPIO[21] <> <UNC>
GPIO[22] <> <UNC>
GPIO[24] <> <UNC>
GPIO[26] <> <UNC>
GPIO[28] <> <UNC>
GPIO[29] <> GPIO[29]
GPIO[30] <> <UNC>
GPIO[32] <> <UNC>
GPIO[34] <> <UNC>


|top|controller_top:controller|controller_reader:controller
clk => output_z.CLK
clk => y.CLK
clk => output_x.CLK
clk => c.CLK
clk => b.CLK
clk => right.CLK
clk => left.CLK
clk => down.CLK
clk => up.CLK
clk => start.CLK
clk => a.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => select~reg0.CLK
clk => state~10.DATAIN
clk => led_reg[0].CLK
clk => led_reg[1].CLK
clk => led_reg[2].CLK
clk => led_reg[3].CLK
clk => led_reg[4].CLK
clk => led_reg[5].CLK
clk => led_reg[6].CLK
clk => led_reg[7].CLK
clk => led_reg[8].CLK
clk => led_reg[9].CLK
clk => led_reg[10].CLK
clk => led_reg[11].CLK
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => select~reg0.PRESET
reset => state~12.DATAIN
reset => output_z.ENA
reset => a.ENA
reset => start.ENA
reset => up.ENA
reset => down.ENA
reset => left.ENA
reset => right.ENA
reset => b.ENA
reset => c.ENA
reset => output_x.ENA
reset => y.ENA
PIN_UP_Z => output_z.DATAB
PIN_UP_Z => up.DATAB
PIN_DOWN_Y => down.DATAB
PIN_DOWN_Y => y.DATAB
PIN_LEFT_X => left.DATAB
PIN_LEFT_X => output_x.DATAB
PIN_RIGHT_MODE => right.DATAB
PIN_A_B => a.DATAB
PIN_A_B => b.DATAB
PIN_START_C => start.DATAB
PIN_START_C => c.DATAB
flag => state.OUTPUTSELECT
flag => state.OUTPUTSELECT
flag => state.OUTPUTSELECT
flag => state.OUTPUTSELECT
flag => state.OUTPUTSELECT
flag => state.OUTPUTSELECT
flag => state.OUTPUTSELECT
flag => state.OUTPUTSELECT
flag => state.OUTPUTSELECT
flag => led_reg[0].ENA
flag => led_reg[1].ENA
flag => led_reg[2].ENA
flag => led_reg[3].ENA
flag => led_reg[4].ENA
flag => led_reg[5].ENA
flag => led_reg[6].ENA
flag => led_reg[7].ENA
flag => led_reg[8].ENA
flag => led_reg[9].ENA
flag => led_reg[10].ENA
flag => led_reg[11].ENA
select <= select~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[0] <= led_reg[0].DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= led_reg[1].DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= led_reg[2].DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= led_reg[3].DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= led_reg[4].DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= led_reg[5].DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= led_reg[6].DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= led_reg[7].DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] <= led_reg[8].DB_MAX_OUTPUT_PORT_TYPE
LEDR[9] <= led_reg[9].DB_MAX_OUTPUT_PORT_TYPE
LEDR[10] <= led_reg[10].DB_MAX_OUTPUT_PORT_TYPE
LEDR[11] <= led_reg[11].DB_MAX_OUTPUT_PORT_TYPE


|top|uart_tx8:uart
clk => clk.IN1
rst => rst.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
start => sending.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
tx <= uart_tx:uart.tx
busy <= sending.DB_MAX_OUTPUT_PORT_TYPE


|top|uart_tx8:uart|uart_tx:uart
clk => sending.CLK
clk => busy~reg0.CLK
rst => sending.ACLR
rst => busy~reg0.ACLR
start => always0.IN1
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
tx <= <VCC>
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE


