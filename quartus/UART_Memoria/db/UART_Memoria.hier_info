|UART_Memoria
tx <= UART:inst1.tx
clock => UART:inst1.clock
clock => ControladorUART:inst.clock
clock => FullMapSendController:inst7.clock
reset => UART:inst1.reset
reset => ControladorUART:inst.reset
reset => FullMapSendController:inst7.reset
rx => UART:inst1.rx
rx_ready <= UART:inst1.rx_ready
rx_data[0] <= UART:inst1.rx_data[0]
rx_data[1] <= UART:inst1.rx_data[1]
rx_data[2] <= UART:inst1.rx_data[2]
rx_data[3] <= UART:inst1.rx_data[3]
rx_data[4] <= UART:inst1.rx_data[4]
rx_data[5] <= UART:inst1.rx_data[5]
rx_data[6] <= UART:inst1.rx_data[6]
rx_data[7] <= UART:inst1.rx_data[7]


|UART_Memoria|UART:inst1
clock => tx_shift[0].CLK
clock => tx_shift[1].CLK
clock => tx_shift[2].CLK
clock => tx_shift[3].CLK
clock => tx_shift[4].CLK
clock => tx_shift[5].CLK
clock => tx_shift[6].CLK
clock => tx_shift[7].CLK
clock => tx_shift[8].CLK
clock => tx_shift[9].CLK
clock => tx_clk_cnt[0].CLK
clock => tx_clk_cnt[1].CLK
clock => tx_clk_cnt[2].CLK
clock => tx_clk_cnt[3].CLK
clock => tx_clk_cnt[4].CLK
clock => tx_clk_cnt[5].CLK
clock => tx_clk_cnt[6].CLK
clock => tx_clk_cnt[7].CLK
clock => tx_clk_cnt[8].CLK
clock => tx_clk_cnt[9].CLK
clock => tx_clk_cnt[10].CLK
clock => tx_clk_cnt[11].CLK
clock => tx_clk_cnt[12].CLK
clock => tx_clk_cnt[13].CLK
clock => tx_clk_cnt[14].CLK
clock => tx_clk_cnt[15].CLK
clock => tx_bit_cnt[0].CLK
clock => tx_bit_cnt[1].CLK
clock => tx_bit_cnt[2].CLK
clock => tx_bit_cnt[3].CLK
clock => tx_busy~reg0.CLK
clock => tx~reg0.CLK
clock => rx_ready~reg0.CLK
reset => tx_clk_cnt[0].ACLR
reset => tx_clk_cnt[1].ACLR
reset => tx_clk_cnt[2].ACLR
reset => tx_clk_cnt[3].ACLR
reset => tx_clk_cnt[4].ACLR
reset => tx_clk_cnt[5].ACLR
reset => tx_clk_cnt[6].ACLR
reset => tx_clk_cnt[7].ACLR
reset => tx_clk_cnt[8].ACLR
reset => tx_clk_cnt[9].ACLR
reset => tx_clk_cnt[10].ACLR
reset => tx_clk_cnt[11].ACLR
reset => tx_clk_cnt[12].ACLR
reset => tx_clk_cnt[13].ACLR
reset => tx_clk_cnt[14].ACLR
reset => tx_clk_cnt[15].ACLR
reset => tx_bit_cnt[0].ACLR
reset => tx_bit_cnt[1].ACLR
reset => tx_bit_cnt[2].ACLR
reset => tx_bit_cnt[3].ACLR
reset => tx_busy~reg0.ACLR
reset => tx~reg0.PRESET
reset => rx_ready~reg0.ACLR
reset => tx_shift[0].ENA
reset => tx_shift[9].ENA
reset => tx_shift[8].ENA
reset => tx_shift[7].ENA
reset => tx_shift[6].ENA
reset => tx_shift[5].ENA
reset => tx_shift[4].ENA
reset => tx_shift[3].ENA
reset => tx_shift[2].ENA
reset => tx_shift[1].ENA
rx => ~NO_FANOUT~
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= <GND>
rx_data[1] <= <GND>
rx_data[2] <= <GND>
rx_data[3] <= <GND>
rx_data[4] <= <GND>
rx_data[5] <= <GND>
rx_data[6] <= <GND>
rx_data[7] <= <GND>
rx_ready <= rx_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data[0] => tx_shift.DATAB
tx_data[1] => tx_shift.DATAB
tx_data[2] => tx_shift.DATAB
tx_data[3] => tx_shift.DATAB
tx_data[4] => tx_shift.DATAB
tx_data[5] => tx_shift.DATAB
tx_data[6] => tx_shift.DATAB
tx_data[7] => tx_shift.DATAB
tx_start => always1.IN1
tx_busy <= tx_busy~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART_Memoria|ControladorUART:inst
clock => data_reg[0].CLK
clock => data_reg[1].CLK
clock => data_reg[2].CLK
clock => data_reg[3].CLK
clock => data_reg[4].CLK
clock => data_reg[5].CLK
clock => data_reg[6].CLK
clock => data_reg[7].CLK
clock => estado_atual~1.DATAIN
reset => data_reg[0].ACLR
reset => data_reg[1].ACLR
reset => data_reg[2].ACLR
reset => data_reg[3].ACLR
reset => data_reg[4].ACLR
reset => data_reg[5].ACLR
reset => data_reg[6].ACLR
reset => data_reg[7].ACLR
reset => estado_atual~3.DATAIN
tx_busy => Selector1.IN2
tx_busy => Selector0.IN2
start_transmission => proximo_estado.TRANSMITIR.DATAB
start_transmission => Selector0.IN1
data_in[0] => data_reg[0].DATAIN
data_in[1] => data_reg[1].DATAIN
data_in[2] => data_reg[2].DATAIN
data_in[3] => data_reg[3].DATAIN
data_in[4] => data_reg[4].DATAIN
data_in[5] => data_reg[5].DATAIN
data_in[6] => data_reg[6].DATAIN
data_in[7] => data_reg[7].DATAIN
tx_start <= tx_start.DB_MAX_OUTPUT_PORT_TYPE
tx_data[0] <= data_reg[0].DB_MAX_OUTPUT_PORT_TYPE
tx_data[1] <= data_reg[1].DB_MAX_OUTPUT_PORT_TYPE
tx_data[2] <= data_reg[2].DB_MAX_OUTPUT_PORT_TYPE
tx_data[3] <= data_reg[3].DB_MAX_OUTPUT_PORT_TYPE
tx_data[4] <= data_reg[4].DB_MAX_OUTPUT_PORT_TYPE
tx_data[5] <= data_reg[5].DB_MAX_OUTPUT_PORT_TYPE
tx_data[6] <= data_reg[6].DB_MAX_OUTPUT_PORT_TYPE
tx_data[7] <= data_reg[7].DB_MAX_OUTPUT_PORT_TYPE


|UART_Memoria|FullMapSendController:inst7
clock => dado_saida[0]~reg0.CLK
clock => dado_saida[1]~reg0.CLK
clock => dado_saida[2]~reg0.CLK
clock => dado_saida[3]~reg0.CLK
clock => dado_saida[4]~reg0.CLK
clock => dado_saida[5]~reg0.CLK
clock => dado_saida[6]~reg0.CLK
clock => dado_saida[7]~reg0.CLK
clock => iniciar_envio~reg0.CLK
clock => indice_chunk[0].CLK
clock => indice_chunk[1].CLK
clock => indice_chunk[2].CLK
clock => indice_chunk[3].CLK
clock => indice_chunk[4].CLK
clock => indice_chunk[5].CLK
clock => contador_delay[0].CLK
clock => contador_delay[1].CLK
clock => contador_delay[2].CLK
clock => contador_delay[3].CLK
clock => contador_delay[4].CLK
clock => contador_delay[5].CLK
clock => contador_delay[6].CLK
clock => contador_delay[7].CLK
clock => contador_delay[8].CLK
clock => contador_delay[9].CLK
clock => contador_delay[10].CLK
clock => contador_delay[11].CLK
clock => contador_delay[12].CLK
clock => contador_delay[13].CLK
clock => contador_delay[14].CLK
clock => contador_delay[15].CLK
clock => contador_delay[16].CLK
clock => contador_delay[17].CLK
clock => contador_delay[18].CLK
clock => contador_delay[19].CLK
clock => contador_delay[20].CLK
clock => contador_delay[21].CLK
clock => contador_delay[22].CLK
clock => contador_delay[23].CLK
clock => contador_delay[24].CLK
clock => contador_delay[25].CLK
clock => envio_concluido_reg.CLK
clock => habilitacao_reg.CLK
clock => estado_atual~4.DATAIN
reset => dado_saida[0]~reg0.ACLR
reset => dado_saida[1]~reg0.ACLR
reset => dado_saida[2]~reg0.ACLR
reset => dado_saida[3]~reg0.ACLR
reset => dado_saida[4]~reg0.ACLR
reset => dado_saida[5]~reg0.ACLR
reset => dado_saida[6]~reg0.ACLR
reset => dado_saida[7]~reg0.ACLR
reset => iniciar_envio~reg0.ACLR
reset => indice_chunk[0].ACLR
reset => indice_chunk[1].ACLR
reset => indice_chunk[2].ACLR
reset => indice_chunk[3].ACLR
reset => indice_chunk[4].ACLR
reset => indice_chunk[5].ACLR
reset => contador_delay[0].ACLR
reset => contador_delay[1].ACLR
reset => contador_delay[2].ACLR
reset => contador_delay[3].ACLR
reset => contador_delay[4].ACLR
reset => contador_delay[5].ACLR
reset => contador_delay[6].ACLR
reset => contador_delay[7].ACLR
reset => contador_delay[8].ACLR
reset => contador_delay[9].ACLR
reset => contador_delay[10].ACLR
reset => contador_delay[11].ACLR
reset => contador_delay[12].ACLR
reset => contador_delay[13].ACLR
reset => contador_delay[14].ACLR
reset => contador_delay[15].ACLR
reset => contador_delay[16].ACLR
reset => contador_delay[17].ACLR
reset => contador_delay[18].ACLR
reset => contador_delay[19].ACLR
reset => contador_delay[20].ACLR
reset => contador_delay[21].ACLR
reset => contador_delay[22].ACLR
reset => contador_delay[23].ACLR
reset => contador_delay[24].ACLR
reset => contador_delay[25].ACLR
reset => envio_concluido_reg.ACLR
reset => habilitacao_reg.ACLR
reset => estado_atual~6.DATAIN
habilitar_envio => habilitacao_reg.OUTPUTSELECT
uart_ocupado => estado_futuro.OUTPUTSELECT
uart_ocupado => estado_atual.OUTPUTSELECT
uart_ocupado => estado_atual.OUTPUTSELECT
uart_ocupado => estado_atual.OUTPUTSELECT
uart_ocupado => estado_atual.OUTPUTSELECT
uart_ocupado => estado_atual.OUTPUTSELECT
uart_ocupado => estado_atual.OUTPUTSELECT
iniciar_envio <= iniciar_envio~reg0.DB_MAX_OUTPUT_PORT_TYPE
dado_saida[0] <= dado_saida[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dado_saida[1] <= dado_saida[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dado_saida[2] <= dado_saida[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dado_saida[3] <= dado_saida[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dado_saida[4] <= dado_saida[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dado_saida[5] <= dado_saida[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dado_saida[6] <= dado_saida[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dado_saida[7] <= dado_saida[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
envio_concluido <= envio_concluido_reg.DB_MAX_OUTPUT_PORT_TYPE


